name: User_creation_in_snowflake_reader_account

env:
  SNOWSQL_ACCOUNT: ${{ vars.SNOWSQL_ACCOUNT }}
  SNOWSQL_USER: ${{ vars.SNOWSQL_USER }}
  SNOWSQL_PWD: ${{ vars.SNOWSQL_PWD }}
  SNOWSQL_ROLE: ${{ vars.SNOWSQL_ROLE }}
  
on:
  workflow_dispatch:                                                
  
jobs:                         
  executequery:                           
    name: User_creation_in_snowflake_reader_account                        
    runs-on: ubuntu-latest                           
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download SnowSQL
        run: curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.9-linux_x86_64.bash
      - name: Install SnowSQL
        run: SNOWSQL_DEST=~/snowflake SNOWSQL_LOGIN_SHELL=~/.profile bash snowsql-1.2.9-linux_x86_64.bash
      - name: Test installation
        run: ~/snowflake/snowsql -v
      - name: Variable Substitution
        run: echo "variable_substitution=true" | tee -a ~/.snowsql/config
      
      - name: Execute SQL against Snowflake
        env:
          FILE_LIST: ${{ vars.FULL_FILE_LIST }}
          ROLES_LIST: ${{ vars.roles_list }}
        run: |
          echo "$FILE_LIST"
          IFS="," read -ra emails <<< "$FILE_LIST"
          IFS="," read -ra roles <<< "$ROLES_LIST"
          for email in "${emails[@]}"; do
            password=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 8)
            
            # Check if the user already exists
            user_exists=$(~/snowflake/snowsql -u "$SNOWSQL_USER" -q "SHOW USERS LIKE '$email';" | grep -c "$email")
            
            if [ "$user_exists" -eq 1 ]; then
              # Display message for existing user
              echo "User '$email' already exists."
            else
              # Create user in Snowflake
              ~/snowflake/snowsql -u "$SNOWSQL_USER" -q "CREATE USER \"$email\" PASSWORD = '$password' MUST_CHANGE_PASSWORD = TRUE EMAIL = '$email';"
              
              # Display username and password for newly created user
              echo "User created with email: $email"
              echo "Password: $password"
            fi
            
            # Assign roles to the user (existing or newly created)
            for role in "${roles[@]}"; do
              ~/snowflake/snowsql -u "$SNOWSQL_USER" -q "GRANT ROLE \"$role\" TO USER \"$email\";"
            done
            
            # Display assigned roles to the user
            echo "Roles assigned to user '$email': ${roles[@]}"
            echo "Please change your password upon first login for security reasons."
          done
