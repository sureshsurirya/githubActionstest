name: variable_fix

env:
  SNOWSQL_ACCOUNT: ${{ vars.SNOWSQL_ACCOUNT }}
  SNOWSQL_USER: ${{ vars.SNOWSQL_USER }}
  SNOWSQL_PWD: ${{ vars.SNOWSQL_PWD }}
  SNOWSQL_ROLE: ${{ vars.SNOWSQL_ROLE }}
  SNOWSQL_WAREHOUSE: ${{ vars.SNOWSQL_WAREHOUSE }}
  SNOWSQL_DATABASE: ${{ vars.TGT_DB }}
  SNOWSQL_SCHEMA: ${{ vars.TGT_SCHEMA }}
  SNOWSQL_RAW_DB: ${{ vars.SRC_DB }}
  SNOWSQL_SRC_SCHEMA: ${{ vars.SRC_SCHEMA }}
  SNOWSQL_CUST_NAME: ${{ vars.CUST_NAME }}
  SNOWSQL_ADMIN_PASSWORD: ${{ vars.ADMIN_PASSWORD }}
  SNOWSQL_CUST_EMAIL: ${{ vars.CUST_EMAIL }}
  SNOWSQL_CUST_DB: ${{ vars.CUST_DB }}
  SNOWSQL_CUST_SCHEMA: ${{ vars.CUST_SCHEMA }}

on:
  workflow_dispatch:

jobs:
  executequery:
    name: Sub account setup Job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download SnowSQL
        run: |
          curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.9-linux_x86_64.bash

      - name: Install SnowSQL
        run: |
          SNOWSQL_DEST=~/snowflake SNOWSQL_LOGIN_SHELL=~/.profile bash snowsql-1.2.9-linux_x86_64.bash

      - name: Test installation
        run: ~/snowflake/snowsql -v

      - name: Variable Substitution
        run: echo "variable_substitution=true" | tee -a ~/.snowsql/config

      - name: Setup SnowSQL and Create Snowflake Account
        run: |
          ~/snowflake/snowsql <<EOF
          USE ROLE ACCOUNTADMIN;
          CREATE OR REPLACE SHARE ${{ env.SNOWSQL_CUST_NAME }}_SHARE;
          USE DATABASE ${{ env.SNOWSQL_CUST_DB }};
          GRANT USAGE ON DATABASE ${{ env.SNOWSQL_CUST_DB }} TO SHARE "${{ env.SNOWSQL_CUST_NAME }}_SHARE";
          GRANT USAGE ON SCHEMA ${{ env.SNOWSQL_CUST_SCHEMA }} TO SHARE "${{ env.SNOWSQL_CUST_NAME }}_SHARE";
          GRANT SELECT ON ALL TABLES IN SCHEMA ${{ env.SNOWSQL_CUST_DB }}.${{ env.SNOWSQL_CUST_SCHEMA }} TO SHARE "${{ env.SNOWSQL_CUST_NAME }}_SHARE";
          EOF

          ~/snowflake/snowsql <<EOF
          CREATE ACCOUNT ${{ env.SNOWSQL_CUST_NAME }}
          ADMIN_NAME = admin
          ADMIN_PASSWORD = "${{ env.SNOWSQL_ADMIN_PASSWORD }}"
          EMAIL = '${{ env.SNOWSQL_CUST_EMAIL }}'
          MUST_CHANGE_PASSWORD = FALSE
          EDITION = enterprise;
          USE ROLE ACCOUNTADMIN;
          USE DATABASE ${{ env.SNOWSQL_CUST_DB }};
          create or replace table sub_account_details_list as select * from table(result_scan(LAST_QUERY_ID(-3)));
          grant select on table sub_account_details_list to role SYSADMIN;
          EOF

      - name: Execute Snowflake SQL Command and Save Output to File
        run: |
          ~/snowflake/snowsql <<EOF > snowflake_output.txt
          USE ROLE ACCOUNTADMIN;
          USE DATABASE ${{ env.SNOWSQL_CUST_DB }};
          SELECT PARSE_JSON("status"):url::string as url FROM sub_account_details_list;
          EOF

      - name: Extract URL Value from Snowflake Output File
        run: |
          # Extract the URL value from the snowflake_output.txt file
          url=$(grep -oP 'https://\S+' snowflake_output.txt)
          echo "URL: $url"
          
      - name: Execute Snowflake SQL Command and Save Output to File
        run: |
          ~/snowflake/snowsql <<EOF > snowflake_output2.txt
          USE ROLE ACCOUNTADMIN;
          USE DATABASE ${{ env.SNOWSQL_CUST_DB }};
          SELECT PARSE_JSON("status"):accountLocator::varchar as accountLocator FROM sub_account_details_list;
          EOF

      - name: Display Snowflake Output2 File
        run: |
          # Display the contents of the snowflake_output2.txt file
          cat snowflake_output2.txt
          
      - name: Extract accountLocator from Snowflake Output File using a different pattern
        run: |
          # Extract the accountLocator value from the snowflake_output2.txt file using a different pattern
          accountLocator=$(grep -oP 'accountLocator:\s*\K\S+' snowflake_output2.txt)
          echo "accountLocator: $accountLocator"


