name: User_creation_final

env:
  SNOWSQL_ACCOUNT: ${{ secrets.SNOWSQL_ACCOUNT }}
  SNOWSQL_USER: ${{ secrets.SNOWSQL_USER }}
  SNOWSQL_PWD: ${{ secrets.SNOWSQL_PWD }}
  SNOWSQL_ROLE: ${{ secrets.SNOWSQL_ROLE }}
  
on:
  workflow_dispatch:                                                
  
jobs:                         
  executequery:                           
    name: User_creation_final                     
    runs-on: ubuntu-latest                           
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Download SnowSQL
      run:  curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.9-linux_x86_64.bash
    - name: Install SnowSQL
      run: SNOWSQL_DEST=~/snowflake SNOWSQL_LOGIN_SHELL=~/.profile bash snowsql-1.2.9-linux_x86_64.bash
    - name: Test installation
      run:  ~/snowflake/snowsql -v
    - name: Variable Substitution
      run: echo "variable_substitution=true" | tee -a ~/.snowsql/config
      
    - name: Execute SQL against Snowflake
      env:
        FILE_LIST: ${{ secrets.FULL_FILE_LIST }}
        APPLICATION_NAMES: ${{ secrets.APPLICATION_NAMES }}
      run:  |
        echo "$FILE_LIST"
        IFS="," read -ra emails <<< "$FILE_LIST"
        IFS="," read -ra application_names <<< "${APPLICATION_NAMES^^}" # Converting to uppercase for comparison
        
        for email in "${emails[@]}"; do
          password=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 8)
          
          for app in "${application_names[@]}"; do
            case $app in
              "ONCORE")
                role="ONCORE_READER_ROLE"
                ;;
              "EDC")
                role="EDC_READER_ROLE"
                ;;
              "EVAL")
                role="EVAL_READER_ROLE"
                ;;
              *)
                echo "Invalid application specified."
                exit 1
                ;;
            esac
            
            # Check if the role exists, if not, create it
            role_check=$(~/snowflake/snowsql -u "$SNOWSQL_USER" -o friendly=false -t -A -q "SHOW ROLES LIKE '$role';")
            if [ -z "$role_check" ]; then
              ~/snowflake/snowsql -u "$SNOWSQL_USER" -q "CREATE ROLE \"$role\";"
            fi
            
            # Create user in Snowflake
            ~/snowflake/snowsql -u "$SNOWSQL_USER" -q "CREATE USER IF NOT EXISTS \"$email\" PASSWORD = '$password' MUST_CHANGE_PASSWORD = TRUE EMAIL = '$email';"
            
            # Assign role to the user
            ~/snowflake/snowsql -u "$SNOWSQL_USER" -q "GRANT ROLE \"$role\" TO USER \"$email\";"
            
            echo "User created with email: $email"
            echo "Password: $password"
            echo "Role assigned: $role"
          done
        done
