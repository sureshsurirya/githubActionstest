name: edc_deployment
env:
  SNOWSQL_ACCOUNT: ${{ vars.SNOWSQL_ACCOUNT }}
  SNOWSQL_USER: ${{ vars.SNOWSQL_USER }}
  SNOWSQL_PWD: ${{ vars.SNOWSQL_PWD }}
  SNOWSQL_ROLE: ${{ vars.SNOWSQL_ROLE }}
  SNOWSQL_WAREHOUSE: ${{ vars.SNOWSQL_WAREHOUSE }}
  SNOWSQL_DATABASE: ${{ vars.SNOWSQL_DATABASE }}
  SNOWSQL_SCHEMA: ${{ vars.SNOWSQL_SCHEMA }}

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  executequery:
    name: EDC Deployment Job
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Download SnowSQL
      run: curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.9-linux_x86_64.bash
    - name: Install SnowSQL
      run: SNOWSQL_DEST=~/snowflake SNOWSQL_LOGIN_SHELL=~/.profile bash snowsql-1.2.9-linux_x86_64.bash
    - name: Test installation
      run: ~/snowflake/snowsql -v
    - name: Variable Substitution
      run: echo "variable_substitution=true" | tee -a ~/.snowsql/config
    - name: Execute SQL against Snowflake
      run: |
        ~/snowflake/snowsql -o log_level=DEBUG -d $SNOWSQL_DATABASE -u $SNOWSQL_USER -r $SNOWSQL_ROLE -w $SNOWSQL_WAREHOUSE -s $SNOWSQL_SCHEMA <<EOF
        CREATE OR REPLACE PROCEDURE CREATE_SAMPLE()
          RETURNS STRING
          LANGUAGE SQL
          EXECUTE AS CALLER
          AS
          '
          CREATE OR REPLACE TABLE gitactions_table (id INT, name STRING, age INT);
          RETURN ''Sample table created successfully.'';
          '
        EOF
