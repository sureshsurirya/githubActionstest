name: edc_deployment
env:
  SNOWSQL_ACCOUNT: ${{ SNOWSQL_ACCOUNT }}
  SNOWSQL_USER: ${{ SNOWSQL_USER }}
  SNOWSQL_PWD: ${{ secrets.SNOWSQL_PWD }}
  SNOWSQL_ROLE: ${{ SNOWSQL_ROLE }}
  SNOWSQL_WAREHOUSE: ${{ SNOWSQL_WAREHOUSE }}
  SNOWSQL_DATABASE: ${{ TGT_DB }}
  SNOWSQL_SCHEMA: ${{ TGT_SCHEMA }}

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  executequery:
    name: EDC Deployment Job
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Download SnowSQL
      run: curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.9-linux_x86_64.bash
    - name: Install SnowSQL
      run: SNOWSQL_DEST=~/snowflake SNOWSQL_LOGIN_SHELL=~/.profile bash snowsql-1.2.9-linux_x86_64.bash
    - name: Test installation
      run: ~/snowflake/snowsql -v
    - name: Variable Substitution
      run: echo "variable_substitution=true" | tee -a ~/.snowsql/config
    - name: Execute SQL against Snowflake
      run: |
        ~/snowflake/snowsql -o log_level=DEBUG -D CUST_RAW_DB=$TGT_DB -D CUST_SCHEMA=$TGT_SCHEMA -d $SNOWSQL_DATABASE -u $SNOWSQL_USER -p $SNOWSQL_PWD -r $SNOWSQL_ROLE -w $SNOWSQL_WAREHOUSE -s $SNOWSQL_SCHEMA <<EOF
        CREATE OR REPLACE PROCEDURE CREATE_SAMPLE_TABLE()
        RETURNS STRING
        LANGUAGE SQL
        EXECUTE AS CALLER
        AS
        $$
        BEGIN
            -- Create a sample table named "my_sample_table"
            CREATE OR REPLACE TABLE sample_table1 (id INT, name STRING, age INT);
            -- Return a success message
            RETURN 'Sample table created successfully.';
        END;
        $$
        EOF
